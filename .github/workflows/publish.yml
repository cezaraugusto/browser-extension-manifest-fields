name: publish

permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: np version type (patch/minor/major)
        required: true
        default: patch
      distTag:
        description: npm dist-tag (latest,next,canary)
        required: false
        default: latest

jobs:
  publish:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - name: Prepare git history
        run: |
          git fetch --prune --tags
      - name: Check git status (pre-install)
        run: git status --porcelain
      - name: Configure pnpm (no lockfile)
        run: pnpm config set lockfile false
      - name: Install deps (no lockfile)
        env:
          PNPM_LOCKFILE: 'false'
        run: pnpm install --no-frozen-lockfile --lockfile=false
      - name: Configure npm auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          npm whoami || true
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Ensure clean working tree
        run: |
          rm -f pnpm-lock.yaml || true
          git restore --staged . || true
          git checkout -- . || true
          git status --porcelain
      - name: Publish with np (provenance enabled)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ inputs.distTag }}" != "latest" ]; then TAG_ARGS="--tag ${{ inputs.distTag }}"; fi
          npx np "${{ inputs.version }}" --no-tests --any-branch --yolo --message "release: %s" $TAG_ARGS


